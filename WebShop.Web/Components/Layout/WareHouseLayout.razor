@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject CustomStateProvider authenticationStateProvider

<AuthorizeView Roles="Warehouse Worker">
    <Authorized>
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <div class="container-fluid">
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav">
                        <button type="button" class="btn btn-link" @onclick="@HandleLogin">@Message</button>
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page" href="WareHouse">Warehouse</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page" href="YourOrders">Your assigned Orders</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

        @Body
    </Authorized>
    <NotAuthorized>
        <p>You are not authorized to view this page</p>
    </NotAuthorized>
</AuthorizeView>


@code {
    [CascadingParameter]
    Task<AuthenticationState> AuthenticationState { get; set; } = default!;

    private bool showProfilePageDropDown = false;

    String Message = "Login";

    protected override async Task OnParametersSetAsync()
    {
        if (!(await AuthenticationState).User.Identity!.IsAuthenticated)
        {
            Message = "Login";
        }
        else
        {
            Message = "Logout";
        }
    }

    async Task HandleLogin()
    {
        if ((await AuthenticationState).User.Identity!.IsAuthenticated)
        {
            await authenticationStateProvider.Logout();
            navigationManager.NavigateTo("/");
        }
        else
        {
            navigationManager.NavigateTo("/");
        }

    }
}