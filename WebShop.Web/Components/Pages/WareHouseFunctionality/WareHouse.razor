@layout WareHouseLayout
@page "/Warehouse"

<WarehouseOrderDisplay  OrdersList="@OrderListNew" OnStatusUpdated="OnStatusUpdated" />
<br />
<br />
<WarehouseOrderDisplay  OrdersList="@OrderListSent" OnStatusUpdated="OnStatusUpdated" />
<br />
<br />
<WarehouseOrderDisplay  OrdersList="@OrderListDelivered" OnStatusUpdated="OnStatusUpdated" />
<br />
<br />
<WarehouseOrderDisplay  OrdersList="@OrderListCancelled" OnStatusUpdated="OnStatusUpdated" />



@code {

    [Inject]
    protected IOrderItemsService orderItemService { get; set; } = default!;

    [Inject]
    protected IOrdersService orderService { get; set; } = default!;

    private List<OrderDto> OrdersList { get; set; } = default!;

    private List<OrderDto> OrderListNew = default!;
    private List<OrderDto> OrderListSent = default!;
    private List<OrderDto> OrderListDelivered = default!;
    private List<OrderDto> OrderListCancelled = default!;

    private OrderStatusType orderStatus { get; set; } = default!;

    string? error { get; set; }

    protected override async Task OnInitializedAsync()
    {

        await FetchOrderInformationNew();
        await FetchOrderInformationSent();
        await FetchOrderInformationDelivered();
        await FetchOrderInformationCancelled();

    }

    protected async Task FetchOrderInformationNew()
    {

        OrdersList = await orderService.GetOrders();
        OrderListNew = OrdersList.Where(o => o.OrderStatus.CurrentStatus == OrderStatusType.New).ToList();
    }

    protected async Task FetchOrderInformationSent()
    {
        OrdersList = await orderService.GetOrders();
        OrderListSent = OrdersList.Where(o => o.OrderStatus.CurrentStatus == OrderStatusType.Sent).ToList();
    }

    protected async Task FetchOrderInformationDelivered()
    {
        OrdersList = await orderService.GetOrders();
        OrderListDelivered = OrdersList.Where(o => o.OrderStatus.CurrentStatus == OrderStatusType.Delivered).ToList();
    }

    protected async Task FetchOrderInformationCancelled()
    {
        OrdersList = await orderService.GetOrders();
        OrderListCancelled = OrdersList.Where(o => o.OrderStatus.CurrentStatus == OrderStatusType.Cancelled).ToList();
    }

    protected async Task OnStatusUpdated()
    {
        await FetchOrderInformationNew();
        await FetchOrderInformationSent();
        await FetchOrderInformationDelivered();
        await FetchOrderInformationCancelled();
    }




}

