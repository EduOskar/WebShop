@page "/HandleUser/{UserId:int}"
@inject NavigationManager NavigationManager
@inject ISupportService SupportService
@inject IUsersService UserService

<AuthorizeView Roles="Support">
    <Authorized>
        @if (UserId == 0 || UserSupportMail == null)
        {
            <h5>Loading Information - <DisplaySpinner /> </h5>
        }
        else
        {
            <Card Class="col-md-2 align-content-between">
                <CardBody>
                    <CardTitle>@User.FirstName @User.LastName</CardTitle>
                    <CardSubTitle Class="mb-2 text-muted">@User.Email</CardSubTitle>
                    <CardSubTitle Class="mb-2 text-muted">@User.UserName</CardSubTitle>
                </CardBody>
            </Card>

            @foreach (var email in UserSupportMail)
            {
                <div class="support-container" style="background-color: @(email.IsResolved == IsResolved.Resolved ? "green" : "red");">
                    <button class="centered-button" @onclick="() => OpenMessageBoard(email)">Ticket @email.Id - Status: @(email.IsResolved == IsResolved.Resolved ? "Resolved" : "Active")</button>
                </div>
            }
        }

        @if (isMessageBoardOpen)
        {
            <div class="message-board-popup">
                <MessageBoard SupportMailId="@selectedSupportMailId" />
                <button @onclick="() => isMessageBoardOpen = false">Close</button>
            </div>
        }
    </Authorized>
</AuthorizeView>

@code {
    [Parameter]
    public int? UserId { get; set; }

    UserDto User { get; set; } = new();
    List<SupportMailDto> UserSupportMail { get; set; } = default!;

    private bool isMessageBoardOpen = false;
    private int selectedSupportMailId;

    protected override async Task OnParametersSetAsync()
    {
        if (UserId.HasValue)
        {
            User = await UserService.GetUser(UserId.Value);
            UserSupportMail = await SupportService.GetUsersSupportMail(UserId.Value);
        }
    }

    private void OpenMessageBoard(SupportMailDto email)
    {
        selectedSupportMailId = email.Id;
        isMessageBoardOpen = true;
    }
}