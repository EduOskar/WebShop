@page "/"

@if (ProductList == null)
{
    <DisplaySpinner />
}
else
{
    <h3 class="mb-5">Products</h3>

    var productCount = ProductList.Count();

    @if (productCount > 0)
    {

        @foreach (var prodGroup in GetGroupedProductsByCategory())
        {
            <h4>@GetCategoryName(prodGroup)</h4>

            <div class="row mt-3">
                <DisplayProducts ProductList="@prodGroup"></DisplayProducts>
            </div>
            <hr class="mb-3" />
        }

    }
}


@code {
    [Inject]
    public IProductsService ProductService { get; set; } = default!;

    [Inject]
    public ICartItemsService CartitemService { get; set; } = default!;

    public IEnumerable<ProductDto> ProductList { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            ProductList = await ProductService.GetProducts();

            var shoppingCartItems = await CartitemService.GetCartItems(HardCoded.UserId);

            var totalQty = shoppingCartItems.Sum(ci => ci.Qty);

            CartitemService.RaiseEventOnShoppingCartChanged(totalQty);
        }
        catch (Exception)
        {
            
            throw;
        }
       
    }

    protected IOrderedEnumerable<IGrouping<int, ProductDto>> GetGroupedProductsByCategory()
    {
        return from product in ProductList
               group product by product.CategoryId into prodByCatGroup
               orderby prodByCatGroup.Key
               select prodByCatGroup;
    }

    protected string GetCategoryName(IGrouping<int, ProductDto> groupedProductDto)
    {
        return groupedProductDto?.FirstOrDefault(pg => pg.CategoryId == groupedProductDto.Key)!.CategoryName!;
    }
}
