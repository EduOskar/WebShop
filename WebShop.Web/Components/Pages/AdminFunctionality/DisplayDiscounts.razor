@page "/DisplayDiscounts"

<PageTitle>Admin Discount</PageTitle>

<AuthorizeView Roles="Admin">
    <Authorized>
        @if (discountList == null)
        {
            <DisplaySpinner />
        }
        else
        {

            <h3>Discounts</h3>

            <div class="form-group">
                <input class="form-control" type="text" placeholder="filter" @bind="filterDiscount" @bind:event="oninput" />
            </div>

            <table class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>discount code</th>
                        <th>discount percentage</th>
                        <th>Active Status</th>
                        <th>Discounttype</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var discount in discountList)
                    {

                        if (!ApplyFilter(discount))
                        {
                            continue;
                        }
                        <tr>
                            <td>@discount.Id</td>
                            <td>@discount.DiscountCode</td>
                            <td>@discount.DiscountPercentage</td>
                            <td>
                                <select @bind="discount.IsActive" class="form-control">
                                    @foreach (var status in Enum.GetValues<DiscountStatus>())
                                    {
                                        <option value="@status">@status</option>
                                    }
                                </select>
                                <button class="btn btn-primary mt-2" @onclick="()=>UpdateDiscountStatus(discount)">Update status</button>
                            </td>
                            <td>@discount.DiscountType</td>
                                
                        </tr>
                    }
                </tbody>
            </table>
            <a href="edit-discount">Add Discount</a>
            <br />
            <br />
        }
    </Authorized>
</AuthorizeView>


@code {
    [Inject]
    protected IDiscountService discountSevice { get; set; } = default!;

    protected List<DiscountDto> discountList { get; set; } = default!;

    string? filterDiscount { get; set; }

    string? status { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await FetchDiscounts();

    }

    private async Task FetchDiscounts()
    {
        discountList = await discountSevice.GetDiscounts();
    }

    private async Task SendDiscountMail(string discountCode)
    {
        var result = await discountSevice.EmailDiscounts(discountCode);

        if (result)
        {
            status = "Discounts Email Successfully";
        }
        else
        {
            status = "Discounts Email Failed";
        }
    }

    private async Task UpdateDiscountStatus(DiscountDto discount)
    {
        bool successResponse = await discountSevice.UpdateDiscount(discount);
        if (successResponse)
        {
            if (discount.IsActive == DiscountStatus.Active)
            {
                await SendDiscountMail(discount.DiscountCode!);
            }
        }
    }

    private bool ApplyFilter(DiscountDto discount)
    {
        if (string.IsNullOrEmpty(filterDiscount))
            return true;

        if (discount.DiscountCode!.Contains(filterDiscount, StringComparison.OrdinalIgnoreCase))
            return true;

        if (discount.Id.ToString().StartsWith(filterDiscount) || discount.Id.ToString().StartsWith(filterDiscount))
            return true;

        return false;
    }
}
