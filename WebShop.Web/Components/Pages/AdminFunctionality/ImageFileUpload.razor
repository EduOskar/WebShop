@page "/ImageFileUpload"
@inject IConfiguration config

<PageTitle>Image-file Upload</PageTitle>

<InputFile OnChange="@Loadfiles" multiple />

@if (errors.Count > 0)
{
    <h2>errors</h2>
    <ul class="text-danger">
        @foreach (var error in errors)
        {
            <li>@errors</li>
        }
    </ul>
}

@code {
    private long maxFileSize = 1280 * 720 * 3; // represents 3MB
    private int maxAllowedFiles = 3;
    private List<string> errors = new();

    private async Task Loadfiles(InputFileChangeEventArgs e)
    {
        errors.Clear();

        if (e.FileCount > maxAllowedFiles)
        {
            errors.Add($"Error: Attempting to upload {e.FileCount} files, but only {maxAllowedFiles} files are allowed");
            return;
        }

        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            try
            {

                await file.RequestImageFileAsync(file.ContentType, 720, 1280);

                string newFileName = Path.ChangeExtension(
                Path.GetRandomFileName(),
                Path.GetExtension(file.Name));

                string path = Path.Combine(
                    config.GetValue<string>("FileStorage")!,
                    newFileName);

                Directory.CreateDirectory(Path.Combine(
                    config.GetValue<string>("FileStorage")!));

               
                await using FileStream fs = new(path, FileMode.Create);
                await file.OpenReadStream(maxFileSize).CopyToAsync(fs);
            }
            catch (Exception ex)
            {

                errors.Add($"File:{file.Name} Error: {ex.Message}");
            }
        }
    }
}