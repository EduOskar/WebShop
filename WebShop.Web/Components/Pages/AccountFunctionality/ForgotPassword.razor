@page "/forgotPassword"
@inject NavigationManager navigationManager


<div class="forgot-password-container">
    <EditForm class="forgot-password-form" OnValidSubmit="OnSubmit" Model="forgotPasswordRequest">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label for="inputEmail" class="form-label">Email</label>
            <InputText id="inputEmail" class="form-control" placeholder="Email" autofocus @bind-Value="@forgotPasswordRequest.Email" />
            <ValidationMessage For="@(() => forgotPasswordRequest.Email)" class="validation-message" />
        </div>

        <div class="form-actions">
            <Button Class="btn btn-reset" Type="ButtonType.Submit">Reset password</Button>
        </div>
    </EditForm>

    @if (!string.IsNullOrEmpty(error))
    {
        <div class="error-message">@error</div>
    }
</div>

@code {
    [Inject]
    IAuthService authStateProvider { get; set; } = default!;

    ForgotPasswordDto forgotPasswordRequest { get; set; } = new();

    string? error { get; set; }

    async Task OnSubmit()
    {
        try
        {
            await authStateProvider.ForgotPassword(forgotPasswordRequest);
            navigationManager.NavigateTo("/");
        }
        catch (Exception)
        {

            error = "No account with that Email";
        }

    }
}
